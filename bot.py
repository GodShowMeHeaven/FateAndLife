import logging
import os
import telegram  # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç
from telegram import Update, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler, CallbackContext
)
from telegram_bot_calendar import DetailedTelegramCalendar, WMonthTelegramCalendar  # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç
from keyboards.main_menu import main_menu_keyboard, predictions_keyboard
from keyboards.inline_buttons import horoscope_keyboard
from handlers.horoscope import horoscope_callback
from handlers.natal_chart import natal_chart
from handlers.numerology import numerology
from handlers.tarot import tarot  # ‚úÖ –£–±–∏—Ä–∞–µ–º tarot_callback
from handlers.compatibility import compatibility, compatibility_natal
from handlers.compatibility_fio import compatibility_fio
from handlers.fortune import fortune_callback  
from handlers.subscription import subscribe, unsubscribe
from handlers.user_profile import set_profile, get_profile
from handlers.message_of_the_day import message_of_the_day_callback
from utils.calendar import start_calendar, handle_calendar  # ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º inline-–∫–∞–ª–µ–Ω–¥–∞—Ä—å
import config
from utils.button_guard import button_guard

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

async def back_to_menu_callback(update: Update, context: CallbackContext) -> None:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    query = update.callback_query
    if not query:
        logger.error("–û—à–∏–±–∫–∞: back_to_menu_callback –≤—ã–∑–≤–∞–Ω –±–µ–∑ callback_query.")
        return

    await query.answer()

    try:
        await query.message.edit_text("‚è¨ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_keyboard)
    except telegram.error.BadRequest as e:
        logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await query.message.reply_text("‚è¨ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_keyboard)

async def start(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    await update.message.reply_text(
        "üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏–π –±–æ—Ç!\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
        reply_markup=main_menu_keyboard
    )

@button_guard
async def handle_buttons(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    text = update.message.text
    chat_id = update.message.chat_id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –≤—ã–±—Ä–∞–ª: {text}")

    try:
        if text == "üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø":
            await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞:", reply_markup=horoscope_keyboard)
        elif text == "üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è":
            await update.message.reply_text("üî¢ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—å:")
            await start_calendar(update, context)  # ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º inline-–∫–∞–ª–µ–Ω–¥–∞—Ä—å
        elif text == "üåå –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞":
            await update.message.reply_text("üìú –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã:")
            await start_calendar(update, context)
        elif text == "‚ù§Ô∏è –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å":
            await update.message.reply_text("üíë –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞:")
            await start_calendar(update, context)
        elif text == "üìú –ü–æ—Å–ª–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å":
            await message_of_the_day_callback(update, context)  # ‚úÖ –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–∑—É, –±–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        elif text == "üé¥ –ö–∞—Ä—Ç—ã –¢–∞—Ä–æ":
            await tarot(update, context)  # ‚úÖ –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¢–∞—Ä–æ
        elif text == "üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è":
            await update.message.reply_text("üîÆ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è:", reply_markup=predictions_keyboard)
        elif text in ["üí∞ –ù–∞ –¥–µ–Ω—å–≥–∏", "üçÄ –ù–∞ —É–¥–∞—á—É", "üíû –ù–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", "ü©∫ –ù–∞ –∑–¥–æ—Ä–æ–≤—å–µ"]:
            await fortune_callback(update, context)
        else:
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text}")
            await update.message.reply_text("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ {text}: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
app = Application.builder().token(config.TELEGRAM_TOKEN).build()

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("natal_chart", natal_chart))
app.add_handler(CommandHandler("numerology", numerology))
app.add_handler(CommandHandler("tarot", tarot))  # ‚úÖ tarot —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç
app.add_handler(CommandHandler("message_of_the_day", message_of_the_day_callback))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
app.add_handler(CallbackQueryHandler(back_to_menu_callback, pattern="^back_to_menu$"))
app.add_handler(CallbackQueryHandler(message_of_the_day_callback, pattern="^message_of_the_day$"))
app.add_handler(CallbackQueryHandler(handle_calendar, pattern="^cbcal_"))


# –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
app.add_handler(CommandHandler("compatibility", compatibility))
app.add_handler(CommandHandler("compatibility_natal", compatibility_natal))
app.add_handler(CommandHandler("compatibility_fio", compatibility_fio))
app.add_handler(CallbackQueryHandler(fortune_callback, pattern="^fortune_.*$"))

# –ü–æ–¥–ø–∏—Å–∫–∏ –∏ –ø—Ä–æ—Ñ–∏–ª–∏
app.add_handler(CommandHandler("subscribe", subscribe))
app.add_handler(CommandHandler("unsubscribe", unsubscribe))
app.add_handler(CommandHandler("set_profile", set_profile))
app.add_handler(CommandHandler("get_profile", get_profile))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞
app.add_handler(CallbackQueryHandler(horoscope_callback, pattern="^horoscope_.*$"))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_buttons))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
app.run_polling()
