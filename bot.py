import logging
import os
import asyncio
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler, CallbackContext
from keyboards.main_menu import main_menu_keyboard
from keyboards.inline_buttons import horoscope_keyboard
from handlers.horoscope import horoscope_callback  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
from handlers.natal_chart import natal_chart
from handlers.numerology import numerology
from handlers.tarot import tarot, tarot_callback
from handlers.compatibility import compatibility
from handlers.compatibility_natal import compatibility_natal
from handlers.compatibility_fio import compatibility_fio
from handlers.fortune import fortune
from handlers.subscription import subscribe, unsubscribe
from handlers.user_profile import set_profile, get_profile
from scheduler import schedule_daily_messages
from services.openai_service import ask_openai
import openai
import asyncio
import config
import httpx
from services.horoscope_service import get_horoscope  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º OpenAI API-–∫–ª—é—á
openai.api_key = config.OPENAI_API_KEY

# –°–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç –¢–∞—Ä–æ
tarot_cards = [
    "–®—É—Ç", "–ú–∞–≥", "–í–µ—Ä—Ö–æ–≤–Ω–∞—è –ñ—Ä–∏—Ü–∞", "–ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞", "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä",
    "–ò–µ—Ä–æ—Ñ–∞–Ω—Ç", "–í–ª—é–±–ª–µ–Ω–Ω—ã–µ", "–ö–æ–ª–µ—Å–Ω–∏—Ü–∞", "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å", "–û—Ç—à–µ–ª—å–Ω–∏–∫",
    "–ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã", "–°–∏–ª–∞", "–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π", "–°–º–µ—Ä—Ç—å", "–£–º–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
    "–î—å—è–≤–æ–ª", "–ë–∞—à–Ω—è", "–ó–≤–µ–∑–¥–∞", "–õ—É–Ω–∞", "–°–æ–ª–Ω—Ü–µ", "–°—É–¥", "–ú–∏—Ä"
]

def get_tarot_interpretation() -> str:
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É OpenAI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ."""
    card = random.choice(tarot_cards)
    prompt = (
        f"–í—ã—Ç–∞—â–∏ –∫–∞—Ä—Ç—É –¢–∞—Ä–æ: {card}. –û–±—ä—è—Å–Ω–∏ –µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Å—É–¥—å–±—ã, –ª—é–±–≤–∏, –∫–∞—Ä—å–µ—Ä—ã –∏ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–∏."
    )
    interpretation = ask_openai(prompt)  
    return f"üé¥ **–í–∞—à–∞ –∫–∞—Ä—Ç–∞ –¢–∞—Ä–æ: {card}**\n\n{interpretation}"

def get_natal_chart(name: str, birth_date: str, birth_time: str, birth_place: str) -> str:
    """–ó–∞–ø—Ä–æ—Å –∫ OpenAI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã."""
    prompt = (
        f"–°–æ–∑–¥–∞–π —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è {name}. "
        f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}, –í—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_time}, –ú–µ—Å—Ç–æ: {birth_place}. "
        "–û–ø–∏—à–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, —Å–∫—Ä—ã—Ç—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è —Å—É–¥—å–±—ã."
    )
    return ask_openai(prompt)  # ‚ùå –£–±—Ä–∞–ª–∏ await, —Ç–∞–∫ –∫–∞–∫ ask_openai() —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
async def start(update: Update, context):
    await update.message.reply_text(
        "üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏–π –±–æ—Ç!\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
        reply_markup=main_menu_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def handle_buttons(update: Update, context):
    text = update.message.text

    try:
        if text == "üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø":
            await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞:", reply_markup=horoscope_keyboard)
        elif text == "üåå –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞":
            await update.message.reply_text(
                "üìú –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "`/natal_chart –ò–º—è –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥`",
                parse_mode="Markdown"
            )
        elif text == "üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è":
            await update.message.reply_text(
                "üî¢ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "`/numerology –î–î.–ú–ú.–ì–ì–ì–ì`",
                parse_mode="Markdown"
            )
        elif text == "üé¥ –ö–∞—Ä—Ç—ã –¢–∞—Ä–æ":
            await tarot(update, context)
        elif text == "‚ù§Ô∏è –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å":
            await update.message.reply_text(
                "üíë –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏:\n"
                "1Ô∏è‚É£ –ì–æ—Ä–æ—Å–∫–æ–ø: `/compatibility –û–≤–µ–Ω –¢–µ–ª–µ—Ü`\n"
                "2Ô∏è‚É£ –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞: `/compatibility_natal –ò–º—è1 –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥1 –ò–º—è2 –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥2`\n"
                "3Ô∏è‚É£ –§–ò–û –∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: `/compatibility_fio –ò–º—è1 –§–∞–º–∏–ª–∏—è1 –î–î.–ú–ú.–ì–ì–ì–ì –ò–º—è2 –§–∞–º–∏–ª–∏—è2 –î–î.–ú–ú.–ì–ì–ì–ì`",
                parse_mode="Markdown"
            )
        elif text in ["üí∞ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å–≥–∏", "üçÄ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —É–¥–∞—á—É", "üíû –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", "ü©∫ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ"]:
            await fortune(update, context)
        elif text == "üìú –ü–æ—Å–ª–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å":
            await update.message.reply_text("‚ú® –í–∞—à–µ –ø–æ—Å–ª–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å: ... (—Ç—É—Ç –≤—ã–∑–æ–≤ OpenAI)")
        else:
            await update.message.reply_text("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

async def horoscope_callback(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø —É OpenAI."""
    query = update.callback_query
    sign = query.data.replace('horoscope_', '').capitalize()  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –∏–∑ callback_data

    try:
        horoscope_text = await get_horoscope(sign)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
        await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ
        await query.edit_message_text(f"üîÆ –í–∞—à –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è *{sign}*:\n\n{horoscope_text}", parse_mode="Markdown")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –¥–ª—è {sign}: {e}")
        await query.answer()
        await query.edit_message_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
app = Application.builder().token(config.TELEGRAM_TOKEN).build()

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("natal_chart", natal_chart))
app.add_handler(CommandHandler("numerology", numerology))
app.add_handler(CommandHandler("tarot", tarot))
app.add_handler(CallbackQueryHandler(tarot_callback, pattern="^draw_tarot$"))
app.add_handler(CallbackQueryHandler(tarot_callback, pattern="^prev_tarot$"))
app.add_handler(CallbackQueryHandler(tarot_callback, pattern="^next_tarot$"))
app.add_handler(CommandHandler("compatibility", compatibility))
app.add_handler(CommandHandler("compatibility_natal", compatibility_natal))
app.add_handler(CommandHandler("compatibility_fio", compatibility_fio))
app.add_handler(CommandHandler("fortune", fortune))
app.add_handler(CommandHandler("subscribe", subscribe))
app.add_handler(CommandHandler("unsubscribe", unsubscribe))
app.add_handler(CommandHandler("set_profile", set_profile))
app.add_handler(CommandHandler("get_profile", get_profile))

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞ (callback_data)
app.add_handler(CallbackQueryHandler(horoscope_callback, pattern="^horoscope_.*$"))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_buttons))

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")


# –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
async def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏."""
    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
