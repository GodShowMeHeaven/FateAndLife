from telegram import Update
from telegram.ext import ContextTypes
from telegram.helpers import escape_markdown  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from services.fortune_service import get_fortune
from keyboards.main_menu import main_menu_keyboard
import logging

logger = logging.getLogger(__name__)

CATEGORIES = {
    "fortune_money": "–¥–µ–Ω—å–≥–∏",
    "fortune_luck": "—É–¥–∞—á–∞",
    "fortune_love": "–æ—Ç–Ω–æ—à–µ–Ω–∏—è",
    "fortune_health": "–∑–¥–æ—Ä–æ–≤—å–µ"
}

def get_category(data: str) -> str:
    return CATEGORIES.get(data, "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

async def fortune_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not update.effective_chat:
        logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç effective_chat –≤ update")
        return

    query = update.callback_query
    text = update.message.text if update.message else None
    category = None

    if query and query.data:
        await query.answer()
        category = get_category(query.data)
    elif text in ["üí∞ –ù–∞ –¥–µ–Ω—å–≥–∏", "üçÄ –ù–∞ —É–¥–∞—á—É", "üíû –ù–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", "ü©∫ –ù–∞ –∑–¥–æ—Ä–æ–≤—å–µ"]:
        category = {
            "üí∞ –ù–∞ –¥–µ–Ω—å–≥–∏": "–¥–µ–Ω—å–≥–∏",
            "üçÄ –ù–∞ —É–¥–∞—á—É": "—É–¥–∞—á–∞",
            "üíû –ù–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è": "–æ—Ç–Ω–æ—à–µ–Ω–∏—è",
            "ü©∫ –ù–∞ –∑–¥–æ—Ä–æ–≤—å–µ": "–∑–¥–æ—Ä–æ–≤—å–µ"
        }.get(text)

    if not category:
        logger.warning("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è")
        await (query.message.edit_text if query else update.message.reply_text)(
            escape_markdown("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é.", version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )
        return

    try:
        fortune = await get_fortune(category)
        fortune = fortune[:4000]
        await (query.message.edit_text if query else update.message.reply_text)(
            escape_markdown(f"üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ {category}:\n{fortune}", version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: {e}")
        await (query.message.edit_text if query else update.message.reply_text)(
            escape_markdown("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )