import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from services.openai_service import ask_openai

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

CATEGORIES = {
    "fortune_money": "–¥–µ–Ω—å–≥–∏",
    "fortune_luck": "—É–¥–∞—á–∞",
    "fortune_relationships": "–æ—Ç–Ω–æ—à–µ–Ω–∏—è",
    "fortune_health": "–∑–¥–æ—Ä–æ–≤—å–µ"
}

async def fortune_callback(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç inline-–∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã.
    """
    query = update.callback_query
    chat_id = update.effective_chat.id

    if query:
        await query.answer()
        category = CATEGORIES.get(query.data, "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    else:  # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        text = update.message.text
        category = CATEGORIES.get(text, "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    logger.info(f"–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—É: {category}")

    prediction = ask_openai(f"–°–¥–µ–ª–∞–π —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—É {category}.")

    keyboard = [[InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(
        chat_id=chat_id,
        text=f"üîÆ *–í–∞—à–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—É {category}:*\n\n{prediction}",
        parse_mode="Markdown",
        reply_markup=reply_markup
    )

