from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from telegram.helpers import escape_markdown  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from services.horoscope_service import get_horoscope
from keyboards.main_menu import main_menu_keyboard
from utils.calendar import start_calendar
import logging

logger = logging.getLogger(__name__)

async def horoscope_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not update.callback_query or not update.effective_chat:
        logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç callback_query –∏–ª–∏ effective_chat –≤ update")
        return
    query = update.callback_query
    await query.answer()

    sign = query.data.split("_")[1]
    context.user_data["selected_sign"] = sign
    await query.message.edit_text("üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞:")
    context.user_data["awaiting_horoscope_date"] = True
    await start_calendar(update, context)

async def process_horoscope(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not update.message or not update.effective_chat:
        logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ effective_chat –≤ update")
        return
    selected_date = context.user_data.get("selected_date")
    sign = context.user_data.get("selected_sign")
    if not selected_date or not sign:
        await update.message.reply_text(
            escape_markdown("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –∏ –¥–∞—Ç—É —á–µ—Ä–µ–∑ –º–µ–Ω—é.", version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )
        return

    try:
        horoscope = await get_horoscope(sign, selected_date)
        await update.message.reply_text(
            escape_markdown(f"üåü –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –Ω–∞ {selected_date}:\n{horoscope}", version=2),
            parse_mode="MarkdownV2",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu"),
                 InlineKeyboardButton("üîÑ –î—Ä—É–≥–æ–π –¥–µ–Ω—å", callback_data=f"horoscope_{sign}")]
            ])
        )
        context.user_data.pop("selected_date", None)
        context.user_data.pop("selected_sign", None)
        context.user_data.pop("awaiting_horoscope_date", None)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞: {e}")
        await update.message.reply_text(
            escape_markdown("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )