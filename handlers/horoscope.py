import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from services.horoscope_service import get_horoscope
from utils.loading_messages import send_processing_message, replace_processing_message
from utils.validation import sanitize_input
from keyboards.inline_buttons import horoscope_keyboard

logger = logging.getLogger(__name__)

async def horoscope_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –≥–æ—Ä–æ—Å–∫–æ–ø–∞."""
    query = update.callback_query
    await query.answer()

    if not query.data or not update.effective_chat:
        logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç callback_data –∏–ª–∏ effective_chat")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –∏–∑ callback_data
    sign = query.data.replace("horoscope_", "").capitalize()
    context.user_data["selected_sign"] = sign

    # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –ø–µ—Ä–∏–æ–¥–∞
    period_keyboard = [
        [
            InlineKeyboardButton("–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="period_today"),
            InlineKeyboardButton("–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –Ω–µ–¥–µ–ª—é", callback_data="period_week"),
            InlineKeyboardButton("–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –º–µ—Å—è—Ü", callback_data="period_month"),
        ],
        [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")],
    ]
    reply_markup = InlineKeyboardMarkup(period_keyboard)

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–µ–¥–ª–∞–≥–∞—è –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥
    try:
        await query.message.edit_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–Ω–∞–∫: {sign}\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞:",
            reply_markup=reply_markup
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await context.bot.send_message(
            update.effective_chat.id,
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–Ω–∞–∫: {sign}\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞:",
            reply_markup=reply_markup
        )

async def period_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø."""
    query = update.callback_query
    await query.answer()

    if not query.data or not update.effective_chat:
        logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç callback_data –∏–ª–∏ effective_chat")
        return

    chat_id = update.effective_chat.id
    sign = context.user_data.get("selected_sign")
    if not sign:
        logger.error("–ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ user_data")
        await query.message.edit_text("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –∑–∞–Ω–æ–≤–æ.")
        return

    period = query.data.replace("period_", "")
    period_text = {
        "today": "—Å–µ–≥–æ–¥–Ω—è",
        "week": "—ç—Ç—É –Ω–µ–¥–µ–ª—é",
        "month": "—ç—Ç–æ—Ç –º–µ—Å—è—Ü"
    }.get(period, "—Å–µ–≥–æ–¥–Ω—è")

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—Ä–æ—Å–∏–ª –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –Ω–∞ {period_text}")

    processing_message = None
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        processing_message = await send_processing_message(
            update,
            f"üîÆ –§–æ—Ä–º–∏—Ä—É–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –Ω–∞ {period_text}..."
        )

        # –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
        horoscope_text = await get_horoscope(sign, period)

        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è MarkdownV2
        horoscope_text = sanitize_input(horoscope_text)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
        await context.bot.send_message(
            chat_id,
            f"üåü –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –Ω–∞ {period_text}:\n\n{horoscope_text}",
            parse_mode="MarkdownV2"
        )

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        await replace_processing_message(
            context,
            processing_message,
            f"‚úÖ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –Ω–∞ {period_text} –≥–æ—Ç–æ–≤!"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞: {e}")
        error_message = f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {sanitize_input(str(e))}"
        if processing_message:
            await replace_processing_message(context, processing_message, error_message)
        else:
            await context.bot.send_message(chat_id, error_message, parse_mode="MarkdownV2")

async def process_horoscope(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∑–Ω–∞–∫ –Ω–∞–ø—Ä—è–º—É—é)."""
    if not update.message or not update.message.text or not update.effective_chat:
        logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ effective_chat")
        return

    sign = update.message.text.strip().capitalize()
    from utils.zodiac import get_zodiac_sign
    if not get_zodiac_sign(sign):
        await update.message.reply_text("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –∏–∑ –º–µ–Ω—é:", reply_markup=horoscope_keyboard)
        return

    context.user_data["selected_sign"] = sign
    period_keyboard = [
        [
            InlineKeyboardButton("–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="period_today"),
            InlineKeyboardButton("–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –Ω–µ–¥–µ–ª—é", callback_data="period_week"),
            InlineKeyboardButton("–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –º–µ—Å—è—Ü", callback_data="period_month"),
        ],
        [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")],
    ]
    reply_markup = InlineKeyboardMarkup(period_keyboard)

    await update.message.reply_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–Ω–∞–∫: {sign}\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞:",
        reply_markup=reply_markup
    )