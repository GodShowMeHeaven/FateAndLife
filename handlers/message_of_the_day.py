import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from services.openai_service import ask_openai

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def message_of_the_day_callback(update: Update, context: CallbackContext) -> None:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–µ –ø–æ—Å–ª–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é OpenAI API"""
    query = update.callback_query if update.callback_query else None
    chat_id = query.message.chat_id if query else update.effective_chat.id

    prompt = (
        "–°–æ–∑–¥–∞–π –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å. "
        "–î–æ–±–∞–≤—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏, —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏–µ –æ–±—Ä–∞–∑—ã –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≥–∞—Ä–º–æ–Ω–∏–∏."
    )

    try:
        logger.info(f"–ó–∞–ø—Ä–æ—Å –∫ OpenAI –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å–ª–∞–Ω–∏—è –Ω–∞ –¥–µ–Ω—å...")
        message_text = ask_openai(prompt)  # ‚ùå –£–±—Ä–∞–ª–∏ `await`, —Ç–∞–∫ –∫–∞–∫ `ask_openai` ‚Äì —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è

        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        keyboard = [[InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ callback –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É
        if query:
            await query.answer()
            await context.bot.send_message(
                chat_id=chat_id,
                text=f"‚ú® *–ü–æ—Å–ª–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å* ‚ú®\n\n{message_text}",
                parse_mode="Markdown",
                reply_markup=reply_markup
            )
        else:
            await context.bot.send_message(
                chat_id=chat_id,
                text=f"‚ú® *–ü–æ—Å–ª–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å* ‚ú®\n\n{message_text}",
                parse_mode="Markdown",
                reply_markup=reply_markup
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–∞–Ω–∏—è: {e}")
        await context.bot.send_message(chat_id=chat_id, text="‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
