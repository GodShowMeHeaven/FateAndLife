from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from services.natal_chart_service import get_natal_chart
from utils.loading_messages import send_processing_message, replace_processing_message
import logging
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def validate_date(date_str: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì."""
    return bool(re.match(r"^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[0-2])\.\d{4}$", date_str))

def validate_time(time_str: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (00:00 - 23:59)."""
    return bool(re.match(r"^([01]?[0-9]|2[0-3]):[0-5][0-9]$", time_str))

def clear_natal_data(context: CallbackContext) -> None:
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ–π, –∏–∑ context.user_data."""
    natal_keys = ["selected_date", "natal_name", "natal_time", "natal_place",
                  "awaiting_natal_name", "awaiting_natal_time", "awaiting_natal_place"]
    for key in natal_keys:
        context.user_data.pop(key, None)
    logger.info("–û—á–∏—â–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã –∏–∑ context.user_data")

async def natal_chart(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã: —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å."""
    chat_id = update.effective_chat.id
    processing_message = None

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—ã–∑–æ–≤–∞: –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
    if update.message and context.args:  # –í—ã–∑–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É
        if len(context.args) < 4:
            await update.message.reply_text(
                "üìú *–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:*\n"
                "`/natal_chart –ò–º—è –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥`",
                parse_mode="Markdown"
            )
            return

        name = context.args[0]
        birth_date = context.args[1]
        birth_time = context.args[2]
        birth_place = " ".join(context.args[3:])

        # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
        if not validate_date(birth_date):
            await update.message.reply_text(
                "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–î–î.–ú–ú.–ì–ì–ì–ì' (–Ω–∞–ø—Ä–∏–º–µ—Ä, '12.05.1990').",
                parse_mode="Markdown"
            )
            return
        if not validate_time(birth_time):
            await update.message.reply_text(
                "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ß–ß:–ú–ú' (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14:30').",
                parse_mode="Markdown"
            )
            return

    elif context.user_data.get("selected_date"):  # –í—ã–∑–æ–≤ —á–µ—Ä–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        birth_date = context.user_data["selected_date"]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ user_data
        if not context.user_data.get("natal_name"):
            await context.bot.send_message(
                chat_id,
                "üìú –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ê–Ω–Ω–∞'):",
            )
            context.user_data["awaiting_natal_name"] = True
            return

        if not context.user_data.get("natal_time"):
            await context.bot.send_message(
                chat_id,
                "‚è∞ –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14:30'):",
            )
            context.user_data["awaiting_natal_time"] = True
            return

        if not context.user_data.get("natal_place"):
            await context.bot.send_message(
                chat_id,
                "üìç –£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ú–æ—Å–∫–≤–∞'):",
            )
            context.user_data["awaiting_natal_place"] = True
            return

        # –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã
        name = context.user_data["natal_name"]
        birth_time = context.user_data["natal_time"]
        birth_place = context.user_data["natal_place"]

        # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        if not validate_date(birth_date):
            logger.error(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {birth_date}")
            await context.bot.send_message(
                chat_id,
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∞—Ç—ã –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                parse_mode="Markdown"
            )
            clear_natal_data(context)
            return
        if not validate_time(birth_time):
            await context.bot.send_message(
                chat_id,
                "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ß–ß:–ú–ú' (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14:30'). –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏:",
            )
            context.user_data.pop("natal_time")  # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è
            context.user_data["awaiting_natal_time"] = True
            return

    else:
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–∑–æ–≤: –Ω–∏ –∫–æ–º–∞–Ω–¥—ã, –Ω–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        logger.warning("‚ö†Ô∏è natal_chart –≤—ã–∑–≤–∞–Ω –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è")
        await context.bot.send_message(
            chat_id,
            "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/natal_chart –ò–º—è –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥` –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —á–µ—Ä–µ–∑ –º–µ–Ω—é.",
            parse_mode="Markdown"
        )
        clear_natal_data(context)  # –û—á–∏—Å—Ç–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        return

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ
        if update.message:
            processing_message = await send_processing_message(update, f"üåå –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤–∞—à—É –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –¥–ª—è {name}...")
        else:
            processing_message = await context.bot.send_message(chat_id, f"üåå –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤–∞—à—É –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –¥–ª—è {name}...")

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É
        natal_chart_text = get_natal_chart(name, birth_date, birth_time, birth_place)

        formatted_chart = (
            f"üåå *–ê–Ω–∞–ª–∏–∑ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è {name}*\n"
            "__________________________\n"
            f"{natal_chart_text}\n"
            "__________________________\n"
            "‚ú® *–°–æ–≤–µ—Ç:* –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞–Ω–∏—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è!"
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = [[InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –ó–∞–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await replace_processing_message(context, processing_message, formatted_chart, reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã: {e}")
        error_message = "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        if processing_message:
            await replace_processing_message(context, processing_message, error_message)
        else:
            await context.bot.send_message(chat_id, error_message, parse_mode="Markdown")
        raise  # –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ finally

    finally:
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ (—É—Å–ø–µ—Ö –∏–ª–∏ –æ—à–∏–±–∫–∞)
        clear_natal_data(context)

async def handle_natal_input(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–º–µ–Ω–∏, –≤—Ä–µ–º–µ–Ω–∏ –∏ –º–µ—Å—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è."""
    if not update.message or not update.message.text:
        return

    chat_id = update.effective_chat.id
    text = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã
    if not any(key in context.user_data for key in ["awaiting_natal_name", "awaiting_natal_time", "awaiting_natal_place"]):
        logger.debug(f"–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç '{text}' - –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤ –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã")
        return

    try:
        if context.user_data.get("awaiting_natal_name"):
            context.user_data["natal_name"] = text
            context.user_data.pop("awaiting_natal_name")
            await context.bot.send_message(chat_id, "‚è∞ –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14:30'):")
            context.user_data["awaiting_natal_time"] = True

        elif context.user_data.get("awaiting_natal_time"):
            if not validate_time(text):
                await update.message.reply_text(
                    "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ß–ß:–ú–ú' (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14:30'). –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥:"
                )
                return
            context.user_data["natal_time"] = text
            context.user_data.pop("awaiting_natal_time")
            await context.bot.send_message(chat_id, "üìç –£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ú–æ—Å–∫–≤–∞'):")
            context.user_data["awaiting_natal_place"] = True

        elif context.user_data.get("awaiting_natal_place"):
            context.user_data["natal_place"] = text
            context.user_data.pop("awaiting_natal_place")
            await natal_chart(update, context)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–≤–æ–¥–∞ –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã: {e}")
        await context.bot.send_message(
            chat_id,
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å –∫–æ–º–∞–Ω–¥—ã /natal_chart –∏–ª–∏ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã.",
            parse_mode="Markdown"
        )
        clear_natal_data(context)