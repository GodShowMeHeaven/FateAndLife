from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from services.natal_chart_service import get_natal_chart
from utils.loading_messages import send_processing_message, replace_processing_message
import logging
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.DEBUG  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º DEBUG –¥–ª—è –±–æ–ª—å—à–µ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
)
logger = logging.getLogger(__name__)

def escape_markdown_v2(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç –≤—Å–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è MarkdownV2."""
    reserved_chars = r'([_*[\]()~`>#+-=|{}.!])'
    result = re.sub(reserved_chars, r'\\\1', text)
    logger.debug(f"–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ escape_markdown_v2: {result[:500]}...")  # –û–≥—Ä–∞–Ω–∏—á–∏–º –¥–æ 500 —Å–∏–º–≤–æ–ª–æ–≤
    return result

def validate_date(date_str: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì."""
    return bool(re.match(r"^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[0-2])\.\d{4}$", date_str))

def validate_time(time_str: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (00:00 - 23:59)."""
    return bool(re.match(r"^([01]?[0-9]|2[0-3]):[0-5][0-9]$", time_str))

def clear_natal_data(context: CallbackContext) -> None:
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ–π, –∏–∑ context.user_data."""
    natal_keys = ["selected_date", "natal_name", "natal_time", "natal_place",
                  "awaiting_natal_name", "awaiting_natal_time", "awaiting_natal_place"]
    for key in natal_keys:
        context.user_data.pop(key, None)
    logger.info("–û—á–∏—â–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã –∏–∑ context.user_data")

async def natal_chart(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã: —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å."""
    chat_id = update.effective_chat.id
    processing_message = None

    logger.debug(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ context.user_data: {context.user_data}")

    if update.message and context.args:
        if len(context.args) < 4:
            await update.message.reply_text(
                escape_markdown_v2("üìú *–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:*\n"
                                   "`/natal_chart –ò–º—è –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥`"),
                parse_mode="MarkdownV2"
            )
            return

        name, birth_date, birth_time, birth_place = context.args[0], context.args[1], context.args[2], " ".join(context.args[3:])
        if not validate_date(birth_date) or not validate_time(birth_time):
            await update.message.reply_text(
                escape_markdown_v2("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú' (–Ω–∞–ø—Ä–∏–º–µ—Ä, '12.05.1990 14:30')."),
                parse_mode="MarkdownV2"
            )
            return

    elif context.user_data.get("selected_date"):
        birth_date = context.user_data["selected_date"]
        if not context.user_data.get("natal_name"):
            await context.bot.send_message(chat_id, escape_markdown_v2("üìú –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ê–Ω–Ω–∞'):"), parse_mode="MarkdownV2")
            context.user_data["awaiting_natal_name"] = True
            return
        if not context.user_data.get("natal_time"):
            await context.bot.send_message(chat_id, escape_markdown_v2("‚è∞ –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14:30'):"), parse_mode="MarkdownV2")
            context.user_data["awaiting_natal_time"] = True
            return
        if not context.user_data.get("natal_place"):
            await context.bot.send_message(chat_id, escape_markdown_v2("üìç –£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ú–æ—Å–∫–≤–∞'):"), parse_mode="MarkdownV2")
            context.user_data["awaiting_natal_place"] = True
            return

        name = context.user_data["natal_name"]
        birth_time = context.user_data["natal_time"]
        birth_place = context.user_data["natal_place"]
        if not validate_date(birth_date) or not validate_time(birth_time):
            await context.bot.send_message(chat_id, escape_markdown_v2("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–∏. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ."), parse_mode="MarkdownV2")
            clear_natal_data(context)
            return

    else:
        logger.warning("‚ö†Ô∏è natal_chart –≤—ã–∑–≤–∞–Ω –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è")
        await context.bot.send_message(chat_id, escape_markdown_v2("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/natal_chart –ò–º—è –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥` –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —á–µ—Ä–µ–∑ –º–µ–Ω—é."), parse_mode="MarkdownV2")
        clear_natal_data(context)
        return

    try:
        processing_message = await send_processing_message(update, escape_markdown_v2(f"üåå –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤–∞—à—É –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –¥–ª—è {name}..."), context)
        natal_chart_text = await get_natal_chart(name, birth_date, birth_time, birth_place)
        logger.debug(f"–¢–µ–∫—Å—Ç –æ—Ç OpenAI: {natal_chart_text[:500]}...")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –±–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        formatted_chart_raw = (
            f"üåå –ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã:\n"
            "__________________________\n"
            f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date}, –í—Ä–µ–º—è: {birth_time}, –ú–µ—Å—Ç–æ: {birth_place}\n"
            f"{natal_chart_text}\n"
            "__________________________\n"
            "‚ú® –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞–Ω–∏—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è!"
        )
        logger.debug(f"–°—ã—Ä–æ–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º: {formatted_chart_raw[:500]}...")

        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç —Ü–µ–ª–∏–∫–æ–º
        formatted_chart = escape_markdown_v2(formatted_chart_raw)
        logger.debug(f"–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π: {formatted_chart[:500]}...")

        keyboard = [[InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await replace_processing_message(context, processing_message, formatted_chart, reply_markup, parse_mode="MarkdownV2")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã: {e}")
        error_message = escape_markdown_v2("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        if processing_message:
            await replace_processing_message(context, processing_message, error_message, parse_mode="MarkdownV2")
        else:
            await context.bot.send_message(chat_id, error_message, parse_mode="MarkdownV2")
        raise

    finally:
        clear_natal_data(context)

async def handle_natal_input(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–º–µ–Ω–∏, –≤—Ä–µ–º–µ–Ω–∏ –∏ –º–µ—Å—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è."""
    if not update.message or not update.message.text:
        return

    chat_id = update.effective_chat.id
    text = update.message.text.strip()

    logger.debug(f"handle_natal_input –ø–æ–ª—É—á–∏–ª —Ç–µ–∫—Å—Ç: '{text}', context.user_data: {context.user_data}")

    awaiting_keys = ["awaiting_natal_name", "awaiting_natal_time", "awaiting_natal_place"]
    if not any(key in context.user_data for key in awaiting_keys):
        logger.debug(f"–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–∞ '{text}' - –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤ –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã")
        return

    try:
        if context.user_data.get("awaiting_natal_name"):
            context.user_data["natal_name"] = text
            context.user_data.pop("awaiting_natal_name")
            await context.bot.send_message(chat_id, escape_markdown_v2("‚è∞ –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14:30'):"), parse_mode="MarkdownV2")
            context.user_data["awaiting_natal_time"] = True
            logger.info(f"–ò–º—è '{text}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ awaiting_natal_time")

        elif context.user_data.get("awaiting_natal_time"):
            if not validate_time(text):
                await update.message.reply_text(escape_markdown_v2("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ß–ß:–ú–ú' (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14:30'). –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥:"), parse_mode="MarkdownV2")
                return
            context.user_data["natal_time"] = text
            context.user_data.pop("awaiting_natal_time")
            await context.bot.send_message(chat_id, escape_markdown_v2("üìç –£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ú–æ—Å–∫–≤–∞'):"), parse_mode="MarkdownV2")
            context.user_data["awaiting_natal_place"] = True
            logger.info(f"–í—Ä–µ–º—è '{text}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ awaiting_natal_place")

        elif context.user_data.get("awaiting_natal_place"):
            context.user_data["natal_place"] = text
            context.user_data.pop("awaiting_natal_place")
            logger.info(f"–ú–µ—Å—Ç–æ '{text}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –≤—ã–∑—ã–≤–∞–µ–º natal_chart")
            await natal_chart(update, context)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–≤–æ–¥–∞ –¥–ª—è –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã: {e}")
        await context.bot.send_message(chat_id, escape_markdown_v2("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å –∫–æ–º–∞–Ω–¥—ã /natal_chart –∏–ª–∏ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã."), parse_mode="MarkdownV2")
        clear_natal_data(context)