from telegram import Update
from telegram.ext import ContextTypes
from telegram.helpers import escape_markdown  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from services.numerology_service import calculate_life_path_number, get_numerology_interpretation
from utils.validation import validate_date
from utils.calendar import start_calendar
from keyboards.main_menu import main_menu_keyboard
import logging

logger = logging.getLogger(__name__)

async def numerology(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not update.effective_chat:
        logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç effective_chat –≤ update")
        return
    await update.message.reply_text("üî¢ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—å:")
    context.user_data["awaiting_numerology"] = True
    await start_calendar(update, context)

async def process_numerology(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not update.message or not update.effective_chat:
        logger.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ effective_chat –≤ update")
        return
    birth_date = context.user_data.get("selected_date")
    if not birth_date:
        await update.message.reply_text(
            escape_markdown("‚ö†Ô∏è –î–∞—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å.", version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )
        return
    if not validate_date(birth_date):
        await update.message.reply_text(
            escape_markdown("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã (–î–î.–ú–ú.–ì–ì–ì–ì).", version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )
        return

    try:
        life_path_number = calculate_life_path_number(birth_date)
        interpretation = get_numerology_interpretation(life_path_number)
        full_result = f"üî¢ –í–∞—à–µ —á–∏—Å–ª–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏: {life_path_number}\n\n{interpretation}"
        await update.message.reply_text(
            escape_markdown(full_result, version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )
        context.user_data.pop("selected_date", None)
        context.user_data.pop("awaiting_numerology", None)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —á–∏—Å–ª–∞ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏: {e}")
        await update.message.reply_text(
            escape_markdown("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", version=2),
            parse_mode="MarkdownV2",
            reply_markup=main_menu_keyboard
        )