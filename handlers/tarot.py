import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from services.tarot_service import get_tarot_interpretation, generate_tarot_image
from services.database import save_tarot_reading
from utils.button_guard import button_guard  # ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞
from utils.loading_messages import send_processing_message, replace_processing_message  # ‚úÖ –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –∑–∞–≥—Ä—É–∑–∫–∏

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

@button_guard
async def tarot(update: Update, context: CallbackContext) -> None:
    """–í—ã—Ç—è–≥–∏–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É –¢–∞—Ä–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é."""
    chat_id = update.effective_chat.id
    logger.info(f"üîÆ tarot() –∑–∞–ø—É—â–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
    processing_message = None  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ
        processing_message = await send_processing_message(update, "üé¥ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤–∞—à—É –∫–∞—Ä—Ç—É –¢–∞—Ä–æ...")
        
        # –¢–∞–π–º–∞—É—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
        for attempt in range(2):  # ‚úÖ –î–µ–ª–∞–µ–º 2 –ø–æ–ø—ã—Ç–∫–∏
            try:
                logger.info(f"üé¥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ... (–ü–æ–ø—ã—Ç–∫–∞ {attempt+1})")
                card, interpretation = await asyncio.wait_for(
                    asyncio.to_thread(get_tarot_interpretation), timeout=30  # ‚úÖ –£–≤–µ–ª–∏—á–∏–ª–∏ —Ç–∞–π–º–∞—É—Ç
                )
                logger.info(f"üé¥ –í—ã—Ç—è–Ω—É—Ç–∞ –∫–∞—Ä—Ç–∞: {card}")
                break  # ‚úÖ –ï—Å–ª–∏ —É–¥–∞–ª–æ—Å—å, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
            except asyncio.TimeoutError:
                logger.warning(f"‚è≥ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è get_tarot_interpretation() –∏—Å—Ç–µ–∫–ª–æ (–ü–æ–ø—ã—Ç–∫–∞ {attempt+1})")
                if attempt == 1:  # –ï—Å–ª–∏ –≤—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Ç–æ–∂–µ –Ω–µ —É–¥–∞–ª–∞—Å—å
                    await replace_processing_message(context, processing_message, "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É.")
                    return

        # –¢–∞–π–º–∞—É—Ç –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        try:
            logger.info("üì∏ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
            image_url = await asyncio.wait_for(
                asyncio.to_thread(generate_tarot_image, card), timeout=25  # ‚úÖ –£–≤–µ–ª–∏—á–∏–ª–∏ —Ç–∞–π–º–∞—É—Ç
            )
            if image_url:
                logger.info("üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ")
        except asyncio.TimeoutError:
            logger.warning("‚è≥ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è generate_tarot_image() –∏—Å—Ç–µ–∫–ª–æ")
            image_url = None  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–∞–¥–∞–Ω–∏—è
        logger.info("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        save_tarot_reading(chat_id, card, interpretation)

        # –§–æ—Ä–º–∏—Ä—É–µ–º inline-–∫–Ω–æ–ø–∫–∏
        keyboard = [[InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if image_url:
            logger.info("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
            await context.bot.send_photo(chat_id=chat_id, photo=image_url)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
        logger.info("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–æ–π...")
        await replace_processing_message(context, processing_message, f"üé¥ *–í–∞—à–∞ –∫–∞—Ä—Ç–∞ –¢–∞—Ä–æ: {card}*\n\n{interpretation}", reply_markup)

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ tarot(): {e}")
        
        if processing_message:
            await replace_processing_message(context, processing_message, "‚ö†Ô∏è –û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        else:
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    finally:
        context.user_data["processing"] = False  # ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–±—Ä–æ—Å
        logger.info(f"‚úÖ tarot() –∑–∞–≤–µ—Ä—à–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
        await asyncio.sleep(2)