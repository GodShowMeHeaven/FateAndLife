import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from services.tarot_service import get_tarot_interpretation, generate_tarot_image
from services.database import save_tarot_reading
from utils.button_guard import button_guard  # ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

@button_guard
async def tarot(update: Update, context: CallbackContext) -> None:
    """
    –í—ã—Ç—è–≥–∏–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É –¢–∞—Ä–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é.
    –î–æ—Å—Ç—É–ø–Ω–æ –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /tarot –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É "üé¥ –ö–∞—Ä—Ç—ã –¢–∞—Ä–æ".
    """
    chat_id = update.effective_chat.id  # ‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è chat_id
    logger.info(f"üîÆ –ù–∞—á–∞–ª–æ –≥–∞–¥–∞–Ω–∏—è –¢–∞—Ä–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}...")

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç—É –∏ –µ—ë –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é
        card, interpretation = await asyncio.to_thread(get_tarot_interpretation)  # ‚úÖ –í—ã–ø–æ–ª–Ω—è–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        logger.info(f"üîÆ –í—ã—Ç—è–Ω—É—Ç–∞ –∫–∞—Ä—Ç–∞: {card}")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
        image_url = await asyncio.to_thread(generate_tarot_image, card)
        if image_url:
            logger.info(f"üîÆ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã {card} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ.")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–∞–¥–∞–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        save_tarot_reading(chat_id, card, interpretation)

        # –§–æ—Ä–º–∏—Ä—É–µ–º inline-–∫–Ω–æ–ø–∫–∏
        keyboard = [[InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        if image_url:
            await context.bot.send_photo(chat_id=chat_id, photo=image_url)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
        await update.message.reply_text(
            f"üé¥ *–í–∞—à–∞ –∫–∞—Ä—Ç–∞ –¢–∞—Ä–æ: {card}*\n\n{interpretation}",
            parse_mode="Markdown",
            reply_markup=reply_markup
        )

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ç—è–≥–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    finally:
        context.user_data["processing"] = False  # ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
        logger.info(f"üîÆ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≥–∞–¥–∞–Ω–∏—è –¢–∞—Ä–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")

        await asyncio.sleep(2)  # ‚úÖ –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —Å–ø–∞–º–∞
