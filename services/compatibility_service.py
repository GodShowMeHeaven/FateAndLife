from services.openai_service import ask_openai

def get_zodiac_compatibility(sign1: str, sign2: str) -> str:
    """Запрашивает совместимость по знакам зодиака у OpenAI."""
    prompt = (
        f"Представь, что ты древний мудрец-астролог с тысячелетним опытом. Раскрой мистическую связь между огненными/водными/воздушными/земными энергиями знаков {sign1} и {sign2}. "
        f"Опиши их танец энергий словами, наполненными магией и глубокой мудростью веков. "
        f"Какие космические силы соединяют эти души? Какие испытания звезды предначертали им? "
        f"Какие тайные ритуалы могут усилить их гармонию? "
        f"Используй метафоры элементов, небесных тел и мистических сил. "
        f"Сделай ответ поэтичным, загадочным и наполненным мудростью звёзд."
    )
    return ask_openai(prompt)

def get_natal_compatibility(name1: str, birth1: str, time1: str, place1: str,
                           name2: str, birth2: str, time2: str, place2: str) -> str:
    """Запрашивает совместимость по натальной карте у OpenAI."""
    prompt = (
        f"Ты — хранитель древних астрологических знаний, способный видеть нити судьбы. "
        f"Перед тобой открыты звёздные карты двух душ: {name1} (рождённый/ая {birth1} в {time1}, {place1}) "
        f"и {name2} (рождённый/ая {birth2} в {time2}, {place2}). "
        f"Погрузись в мистическое созерцание их космических узоров. "
        f"Какие планетарные танцы соединяют их судьбы? Где звёздные узлы сплетают их пути? "
        f"Как древние силы Луны, Венеры и Марса влияют на их союз? "
        f"Раскрой кармические задачи их встречи и священные ритуалы, которые помогут им достичь гармонии. "
        f"Говори языком символов, метафор и тайных знаний. "
        f"Создай ответ, который затронет самые глубокие струны души и откроет завесу тайны их союза. "
        f"Не используй Markdown-форматирование (например, ###, **, *, # и т.д.). "
    )
    return ask_openai(prompt)