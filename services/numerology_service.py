from services.openai_service import ask_openai
from datetime import datetime

def calculate_life_path_number(birth_date: str) -> int:
    """
    Вычисляет число судьбы (нумерологический код личности) по дате рождения.
    Формат: 'ДД.ММ.ГГГГ'
    """
    digits = [int(d) for d in birth_date if d.isdigit()]  # Берем все цифры даты
    life_path_number = sum(digits)  # Складываем все цифры

    # Считаем до одной цифры (1-9)
    while life_path_number >= 10:
        life_path_number = sum(map(int, str(life_path_number)))

    return life_path_number


def get_numerology_interpretation(life_path_number: int) -> str:
    """
    Запрашивает у OpenAI интерпретацию нумерологического числа.
    """
    prompt = f"""
    Ты — хранитель священных числовых кодов и тайн пифагорейской мудрости. 
    Раскрой мистический портал, скрытый за числом судьбы {life_path_number}, которое вибрирует в самой 
    сущности вопрошающего.
    
    Опиши космическую симфонию этого числа, как оно резонирует с силами вселенной и древними 
    архетипами. Какие божественные энергии воплощены в этом числе? Какие священные символы связаны 
    с ним в различных мистических традициях?
    
    Какие дары и испытания несет душа, отмеченная этим числом? Какие кармические уроки из прошлых жизней 
    предстоит освоить? В чем заключается священная миссия носителя этого числа в текущем воплощении?
    
    Поведай о скрытых талантах и силах, которые дремлют в носителе этого числа. Какие кристаллы, 
    цвета, мантры и ритуалы помогут пробудить и усилить благотворные энергии этого числа? 
    Какие дни лунного и солнечного календаря особенно сильны для магических практик?
    
    Говори языком символов и тайных знаний, чтобы каждое слово звучало как древнее пророчество, 
    пробуждающее глубинную память души.
    
    НЕ используй Markdown-форматирование (например, ###, **, *, # и т.д.).
    """
    return ask_openai(prompt)