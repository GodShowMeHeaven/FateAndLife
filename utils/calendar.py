from telegram import Update
from telegram.ext import CallbackContext
from telegram_bot_calendar import WMonthTelegramCalendar
import logging
from datetime import date

logger = logging.getLogger(__name__)

async def start_calendar(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç inline-–∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã."""
    chat_id = update.effective_chat.id

    min_date = date(1900, 1, 1)
    max_date = date.today()

    calendar = WMonthTelegramCalendar(min_date=min_date, max_date=max_date, locale="ru")
    calendar_data = calendar.build()
    
    logger.info("üìÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å.")
    logger.debug(f"Calendar data: {calendar_data}")

    await context.bot.send_message(
        chat_id=chat_id,
        text="üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
        reply_markup=calendar_data[0]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )

async def handle_calendar(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–∞—Ç—ã –≤ inline-–∫–∞–ª–µ–Ω–¥–∞—Ä–µ."""
    query = update.callback_query
    
    if not query:
        logger.error("–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π callback query")
        return
        
    logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω callback: {query.data}")
    
    # –í–∞–∂–Ω–æ: –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query —Å—Ä–∞–∑—É
    await query.answer()

    try:
        calendar = WMonthTelegramCalendar(locale="ru")
        result, keyboard = calendar.process(query.data)
        
        if not result and keyboard:
            logger.info("üìÖ –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å")
            await query.edit_message_text(
                text="üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
                reply_markup=keyboard
            )
        elif result:
            formatted_date = result.strftime("%d.%m.%Y")
            logger.info(f"‚úÖ –î–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞: {formatted_date}")
            
            await query.edit_message_text(f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏: {formatted_date}")
            context.user_data["selected_date"] = formatted_date
            
            await context.bot.send_message(
                chat_id=query.message.chat_id,
                text="‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú:"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {e}")
        await query.edit_message_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")