from telegram import Update
from telegram.ext import CallbackContext
from telegram_bot_calendar import WMonthTelegramCalendar
import logging
from datetime import date

logger = logging.getLogger(__name__)

async def start_calendar(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç inline-–∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã."""
    try:
        chat_id = update.effective_chat.id
        
        calendar = WMonthTelegramCalendar(locale="ru")
        await context.bot.send_message(
            chat_id=chat_id,
            text="üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
            reply_markup=calendar.build()[0]
        )
        logger.info(f"üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è —á–∞—Ç–∞ {chat_id}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {e}")
        await context.bot.send_message(
            chat_id=chat_id,
            text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

async def handle_calendar(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–∞—Ç—ã –≤ inline-–∫–∞–ª–µ–Ω–¥–∞—Ä–µ."""
    query = update.callback_query
    if not query:
        return
    
    logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω callback –¥–∞–Ω–Ω—ã–µ: {query.data}")
    await query.answer()

    try:
        calendar = WMonthTelegramCalendar(locale="ru")
        data = calendar.process(query.data)
        logger.debug(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {data}")
        
        # –ï—Å–ª–∏ data —ç—Ç–æ –∫–æ—Ä—Ç–µ–∂ —Å –¥–≤—É–º—è —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
        if isinstance(data, tuple) and len(data) == 2:
            selected = data[0]  # –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç - –≤—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –∏–ª–∏ None
            markup = data[1]    # –í—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            
            if selected is None:
                # –ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–∞–ª—å—à–µ
                await query.edit_message_text(
                    text="üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
                    reply_markup=markup
                )
            else:
                # –ï—Å–ª–∏ –¥–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞, —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –µ—ë –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
                formatted_date = selected.strftime("%d.%m.%Y")
                context.user_data["selected_date"] = formatted_date
                await query.edit_message_text(
                    text=f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É: {formatted_date}"
                )
                await context.bot.send_message(
                    chat_id=query.message.chat_id,
                    text="‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú:"
                )
        else:
            # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π
            logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {data}")
            raise ValueError("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è")
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {str(e)}")
        try:
            await query.edit_message_text(
                text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –∑–∞–Ω–æ–≤–æ.",
                reply_markup=calendar.build()[0]
            )
        except Exception as e2:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {str(e2)}")
            await query.edit_message_text(
                text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–Ω–æ–≤–æ."
            )